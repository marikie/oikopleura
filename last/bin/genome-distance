#! /bin/sh

test $# = 3 || {
    echo "usage: $(basename $0) accession1 accession2 accession3

Downloads 3 genomes from NCBI, and finds % identity
(matches / [matches+mismatches]) between
* accession1 and accession2
* accession1 and accession3"
    exit 1
}

id1=$1
id2=$2
id3=$3

tmp=genome-distance-$id1-$$

getGenome () {
    test -s "$1".fa && return  # this file is already present
    curl -sS "https://api.ncbi.nlm.nih.gov/datasets/v2/genome/accession/$1/download?include_annotation_type=GENOME_FASTA" > "$1".zip
    unzip -pq "$1".zip "*.fna" > "$1".fa
    rm "$1".zip
}

seqInfo () {  # try to get just organism information from FASTA header line...
    echo "$1" | tr '\n' ' '

    head -n1 "$1".fa |
	cut -d' ' -f2- |
	sed 's/,* unplaced .*//; s/,* unlocalized .*//' |
	sed 's/,* reference .*//; s/,* genomic .*//' |
	sed 's/,* chromosome.*//; s/,* contig.*//; s/,* scaffold.*//' |
	sed 's/,* Scaffold.*//' |
	sed 's/,* Super-Scaffold.*//; s/,* segment.*//; s/,* supercont.*//'
}

compareGenomes () {
    seqInfo "$id1"
    seqInfo "$1"

    last-train -P8 --revsym -C2 "$tmp" "$1".fa |
	tee "$id1"-"$1".train |
	grep substitution |
	tail -n1

    echo
}

getGenome "$id1"
getGenome "$id2"
getGenome "$id3"
lastdb -P8 -c -uRY4 "$tmp" "$id1".fa
compareGenomes "$id2"
compareGenomes "$id3"
echo
rm "$tmp".*
